<?php 	error_reporting(0);	

class Front_Job extends CI_Controller {

	function __construct()
	{
		parent::__construct();
		$this->load->helper(array('form', 'url'));
		$this->load->model('front_job_model');
	}
	function UrlAlias ($string, $table, $id = NULL) {
        //remove any '-' from the string they will be used as concatonater
        $str = str_replace('-', ' ', $string);
        $str = str_replace('_', ' ', $string);
        // remove any duplicate whitespace, and ensure all characters are alphanumeric
        $str = preg_replace(array('/\s+/','/[^A-Za-z0-9\-]/'), array('-',''), $str);

        // lowercase and trim
        $str = trim(strtolower($str));
  
  		// checking if in db or not
 		 if($id == NULL){
			$sql = "SELECT * FROM ".$table." WHERE 1 AND `alias` ='".$str."'";
			} else {
			$sql = "SELECT * FROM ".$table." WHERE 1 AND `alias` ='".$str."' AND `id` <> '".$id."'";
			}
			$res = mysql_query($sql);
			$rowcount = mysql_num_rows($res);
			
			if($rowcount == 0) {
			return $str;
			} else {
			return false;
			}
    		}
    	
	function index()
	{   
		if(!$this->session->userdata('is_translator')){
		$this->load->view('translator/vwLogin');	
		} else {
        //all the posts sent by the view        
        $search_string = $this->input->post('search_string'); 
		$language_from = $this->input->post('language_from');
		$language_to= $this->input->post('language_to');     
        $order = $this->input->post('order'); 
        $order_type = $this->input->post('order_type'); 

        //pagination settings
        $config['per_page'] = 10;
        $config['base_url'] = base_url().'front/jobs';
        $config['use_page_numbers'] = TRUE;
        $config['num_links'] = 20;
        $config['full_tag_open'] = '<ul>';
        $config['full_tag_close'] = '</ul>';
        $config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';
        $config['cur_tag_open'] = '<li class="active"><a>';
        $config['cur_tag_close'] = '</a></li>';
        
        $page = $this->uri->segment(3);
        
        $limit_end=($page * $config['per_page']) - $config['per_page'];
        if ($limit_end < 0){
            $limit_end = 0;
        } 

       
        if($order_type){
            $filter_session_data['order_type'] = $order_type;
        }
        else{
           
            if($this->session->userdata('order_type')){
                $order_type = $this->session->userdata('order_type');    
            }else{
               
                $order_type = 'Desc';    
            }
        }
       
        $data['order_type_selected'] = $order_type;        

  if($language_from !=='' || $language_to!=='' || $search_string !=='' || $order !=='' || $this->uri->segment(3) == true){           if($language_from){
                $filter_session_data['language_from_selected'] = $language_from;
            }else{
                $language_from =$this->session->userdata('language_from_selected');
				$filter_session_data['language_from_selected'] = $language_from;
            }
            $data['language_from_selected'] = $language_from;
            
			if($language_to){
                $filter_session_data['language_to_selected'] = $language_to;
            }else{
                $language_to=$this->session->userdata('language_to_selected');
				$filter_session_data['language_to_selected'] = $language_to;
            }
            $data['language_to_selected'] = $language_to;
			
            if($search_string){
                $filter_session_data['search_string_selected'] = $search_string;
            }else{
                $search_string =$this->session->userdata('search_string_selected');
				$filter_session_data['search_string_selected'] = $search_string;
            }
            $data['search_string_selected'] = $search_string;

            if($order){
                $filter_session_data['order'] = $order;
            }
            else{
                $order =$this->session->userdata('order');
            }
            $data['order'] = $order;

            //save session data into the session
            $this->session->set_userdata($filter_session_data); 

         

            $data['count_jobpost']= $this->front_job_model->count_jobpost($language_from,$language_to, $search_string, $order);
            $config['total_rows'] = $data['count_jobpost'];

            //fetch sql data into arrays
            if($search_string){
                if($order){
                    $data['jobpost'] = $this->front_job_model->get_jobpost($language_from,$language_to, $search_string, $order, $order_type, $config['per_page'],$limit_end);        
                }else{
                    $data['jobpost'] = $this->front_job_model->get_jobpost($language_from,$language_to, $search_string, '', $order_type, $config['per_page'],$limit_end);           
                }
            }else{
                if($order){
                    $data['jobpost'] = $this->front_job_model->get_jobpost($language_from,$language_to, '', $order, $order_type, $config['per_page'],$limit_end);        
                }else{
                    $data['jobpost'] = $this->front_job_model->get_jobpost($language_from,$language_to, '', '', $order_type, $config['per_page'],$limit_end);        
                }
            }

        }else{

            //clean filter data inside section            
            $filter_session_data['search_string_selected'] = null;
			$filter_session_data['language_from_selected'] = null;
			$filter_session_data['language_to_selected'] = null;
            $filter_session_data['order'] = null;
            $filter_session_data['order_type'] = null;
            $this->session->set_userdata($filter_session_data);

            //pre selected options
            $data['search_string_selected'] = '';
            $data['language_from_selected'] = '';
			$data['language_to_selected'] = '';
            $data['order'] = 'id';

            //fetch sql data into arrays
            
            $data['count_jobpost']= $this->front_job_model->count_jobpost();
            $data['jobpost'] = $this->front_job_model->get_jobpost('','','', '', $order_type, $config['per_page'],$limit_end);        
            $config['total_rows'] = $data['count_jobpost'];

          }
        $this->pagination->initialize($config); 
        $this->load->view('translator/vwJobs',$data);		
	   }
	}

   	
    function __encrip_password($password) {
        return md5($password);
    }	

    /**
    * check the username and the password with the database
    * @return void
    */

	public function search()
	{
		if(!$this->session->userdata('is_translator')){
				$this->load->view('translator/vwLogin');	
			} else {
	$search=$this->input->post('search');	
	echo $search;
	$language=$this->input->post('job_language');
	echo $language;
	die;
	$this->load->model('translators_model');
	$data['searchquery']=$this->translators_model->get_jobpost();
	$this->load->view('translator/vwJobs',$data);		
			}}	

	
	function jobdetails(){
		if(!$this->session->userdata('is_translator')){
				$this->load->view('translator/vwLogin');	
			} else {
				
      $alias = $this->uri->segment(2);
		//echo $alias; die;
		$sql = "SELECT * from jobpost WHERE alias = '" . $alias . "'";
		$val = $this->db->query($sql);
		$data['results'] = $val->result_array();
		
		$this->load->view('translator/vwJobdetails', $data);
      }}
   function reset()
   {
   $this->session->unset_userdata('search_string_selected');
   $this->session->unset_userdata('language_from_selected');
   $this->session->unset_userdata('language_to_selected'); 
   $this->index();
   }
	
	

}