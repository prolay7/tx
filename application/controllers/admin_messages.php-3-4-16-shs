<?php	error_reporting(0);
class Admin_messages extends CI_Controller {
	function __construct()
	{
		parent::__construct();
		$this->load->helper(array('form', 'url'));
		$this->load->model('adminmessages_model');
	}

	
	function index()
	{   
	   $filter_session_data="";
        //all the posts sent by the view      
        $search_string = $this->input->post('search_string');        
        $order = $this->input->post('order'); 
        $order_type = $this->input->post('order_type'); 

        //pagination settings
        $config['per_page'] =10;
        $config['base_url'] = base_url().'admin/messages/';
        $config['use_page_numbers'] = TRUE;
        $config['num_links'] = 20;
        $config['full_tag_open'] = '<ul>';
        $config['full_tag_close'] = '</ul>';
        $config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';
        $config['cur_tag_open'] = '<li class="active"><a>';
        $config['cur_tag_close'] = '</a></li>';

        //limit end
        $page = $this->uri->segment(3);

        //math to get the initial record to be select in the database
        $limit_end = ($page * $config['per_page']) - $config['per_page'];
        if ($limit_end < 0){
            $limit_end = 0;
        } 

        //if order type was changed
        if($order_type){
            $filter_session_data['order_type'] = $order_type;
        }
        else{
            //we have something stored in the session? 
            if($this->session->userdata('order_type')){
                $order_type = $this->session->userdata('order_type');    
            }else{
                //if we have nothing inside session, so it's the default "Asc"
                $order_type = 'Asc';    
            }
        }
        //make the data type var avaible to our view
        $data['order_type_selected'] = $order_type;        


        //we must avoid a page reload with the previous session data
        //if any filter post was sent, then it's the first time we load the content
        //in this case we clean the session filter data
        //if any filter post was sent but we are in some page, we must load the session data

        //filtered && || paginated
        if($search_string !== false && $order !== false || $this->uri->segment(3) == true){ 


            //echo $search_string;
			//echo $order;
			//echo $order_type;
			//echo $this->uri->segment(3); die;
            if($search_string){
                $filter_session_data['search_string_selected'] = $search_string;
            }else{
                $search_string = $this->session->userdata('search_string_selected');
            }
            $data['search_string_selected'] = $search_string;

            if($order){
                $filter_session_data['order'] = $order;
            }
            else{
                $order = $this->session->userdata('order');
            }
            $data['order'] = $order;

            //save session data into the session
            $this->session->set_userdata($filter_session_data);

            $data['count_messages']= $this->adminmessages_model->count_messages($search_string, $order);
            $config['total_rows'] = $data['count_messages'];

            //fetch sql data into arrays
            if($search_string){
                if($order){
                    $data['messages'] = $this->adminmessages_model->get_messages($search_string, $order, $order_type, $config['per_page'],$limit_end);        
                }else{
                    $data['messages'] = $this->adminmessages_model->get_messages($search_string, '', $order_type, $config['per_page'],$limit_end);           
                }
            }else{
                if($order){
                    $data['messages'] = $this->adminmessages_model->get_messages('', $order, $order_type, $config['per_page'],$limit_end);        
                }else{
                    $data['messages'] = $this->adminmessages_model->get_messages('', '', $order_type, $config['per_page'],$limit_end);        
                }
            }

        }else{

            //clean filter data inside section;
            $filter_session_data['search_string_selected'] = null;
            $filter_session_data['order'] = null;
            $filter_session_data['order_type'] = null;
            $this->session->set_userdata($filter_session_data);

            //pre selected options
            $data['search_string_selected'] = '';
            $data['order'] = 'id';

            //fetch sql data into arrays
            $data['count_messages']= $this->adminmessages_model->count_messages();
            $data['messages'] = $this->adminmessages_model->get_messages('', '', $order_type, $config['per_page'],$limit_end);   
            $config['total_rows'] = $data['count_messages'];

        }//!isset($manufacture_id) && !isset($search_string) && !isset($order)

        //initializate the panination helper 
        $this->pagination->initialize($config);   

        //load the view
        $this->load->view('admin/jobpost/vwAdminMessages',$data);
		
		
		}

 
public function messages()
{   	 
        $job_id= $this->uri->segment(2);  
	    $filter_session_data="";
        //all the posts sent by the view      
        $search_string = $this->input->post('search_string');        
        $order = $this->input->post('order'); 
        $order_type = $this->input->post('order_type'); 

        //pagination settings
        $config['per_page'] =5;
        $config['base_url'] = base_url().'adminjobmessages/'.$job_id.'/';
        $config['use_page_numbers'] = TRUE;
        $config['num_links'] = 20;
        $config['full_tag_open'] = '<ul>';
        $config['full_tag_close'] = '</ul>';
        $config['num_tag_open'] = '<li>';
        $config['num_tag_close'] = '</li>';
        $config['cur_tag_open'] = '<li class="active"><a>';
        $config['cur_tag_close'] = '</a></li>';

        //limit end
        $page = $this->uri->segment(3);

        //math to get the initial record to be select in the database
        $limit_end = ($page * $config['per_page']) - $config['per_page'];
        if ($limit_end < 0){
            $limit_end = 0;
        } 

        //if order type was changed
        if($order_type){
            $filter_session_data['order_type'] = $order_type;
        }
        else{
            //we have something stored in the session? 
            if($this->session->userdata('order_type')){
                $order_type = $this->session->userdata('order_type');    
            }else{
                //if we have nothing inside session, so it's the default "Asc"
                $order_type = 'Asc';    
            }
        }
        //make the data type var avaible to our view
        $data['order_type_selected'] = $order_type;        


        //we must avoid a page reload with the previous session data
        //if any filter post was sent, then it's the first time we load the content
        //in this case we clean the session filter data
        //if any filter post was sent but we are in some page, we must load the session data

        //filtered && || paginated
        if($search_string !='' || $order !='' || $this->uri->segment(3) == true){ 


            //echo $search_string;
			//echo $order;
			//echo $order_type;
			//echo $this->uri->segment(3); die;
            if($search_string){
                $filter_session_data['search_string_selected'] = $search_string;
            }else{
                $search_string = $this->session->userdata('search_string_selected');
            }
            $data['search_string_selected'] = $search_string;

            if($order){
                $filter_session_data['order'] = $order;
            }
            else{
                $order = $this->session->userdata('order');
            }
            $data['order'] = $order;

            //save session data into the session
            $this->session->set_userdata($filter_session_data);

            $data['count_jobmessages']= $this->adminmessages_model->count_jobmessages($search_string, $order);
            $config['total_rows'] = $data['count_jobmessages'];

            //fetch sql data into arrays
            if($search_string){
                if($order){
                    $data['jobmessages'] = $this->adminmessages_model->get_jobmessages($search_string, $order, $order_type, $config['per_page'],$limit_end);        
                }else{
                    $data['jobmessages'] = $this->adminmessages_model->get_jobmessages($search_string, '', $order_type, $config['per_page'],$limit_end);           
                }
            }else{
                if($order){
                    $data['jobmessages'] = $this->adminmessages_model->get_jobmessages('', $order, $order_type, $config['per_page'],$limit_end);        
                }else{
                    $data['jobmessages'] = $this->adminmessages_model->get_jobmessages('', '', $order_type, $config['per_page'],$limit_end);        
                }
            }

        }else{

            //clean filter data inside section;
            $filter_session_data['search_string_selected'] = null;
            $filter_session_data['order'] = null;
            $filter_session_data['order_type'] = null;
            $this->session->set_userdata($filter_session_data);

            //pre selected options
            $data['search_string_selected'] = '';
            $data['order'] = 'id';

            //fetch sql data into arrays
            $data['count_jobmessages']= $this->adminmessages_model->count_jobmessages();
            $data['jobmessages'] = $this->adminmessages_model->get_jobmessages('', '', $order_type, $config['per_page'],$limit_end);          
			  
            $config['total_rows'] = $data['count_jobmessages'];

        }//!isset($manufacture_id) && !isset($search_string) && !isset($order)

        //initializate the panination helper 
        $this->pagination->initialize($config);   

        //load the view
        $this->load->view('admin/jobpost/vwJobMessages',$data);
		
		
		
		}

	function message(){
		//echo "hello";die;
		$adminID=$this->session->userdata('admin_id');
		
		/*$sql="SELECT * FROM `message` WHERE `type`= 'admin' and `read`='0'";*/
		$sql = "SELECT * FROM `ajax_chat_messages` WHERE `status` = 'unread' AND `type`= 'user'";
		
		$query=$this->db->query($sql);
		$data=$query->result();
		//$data['adminlogid']=$adminID;
		//print_r($data);die;
		//$num=$query->num_rows();
		
		//echo json_encode($return);
		echo json_encode($data);
								
		
	}

}